syntax = "proto3";

package web.sessions;

import "google/api/annotations.proto";
import "google/type/datetime.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option go_package = "moaz/app/web/sessions";

// For signup we will just need them to provide the email
// We will use this for unique id,
// We will generate a password
// And use the secret to generate totp
// The email will be used in case the user needs to change their qr code for the
// totp authenticator, or wants to reset it
message SignupRequest {
  string email = 1;
  string csrf_token = 2;
}

message SignupErrorResponse {
  string msg = 1;
  int64 code = 2;
}

message SignupSuccessResponse {
  string totp_url = 1;
  int64 status = 2;
}

message SignupResponse {
  SignupSuccessResponse data = 1;
  SignupErrorResponse error = 2;
}

service AuthenticationService {
  rpc Signup(SignupRequest) returns (SignupResponse) {
    option(google.api.http) = {
      post: "/signup",
      body: "*"
    };
  };
}
